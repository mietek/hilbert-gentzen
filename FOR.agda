----------------------------------------------------------------------------------------------------

-- first-order renamings

module FOR {𝓍} {X : Set 𝓍} where

open import DBI public


----------------------------------------------------------------------------------------------------

infix 3 _⊑_
data _⊑_ : Tsil X → Tsil X → Set 𝓍 where
  ∙   : ∀ {Γ} → ∙ ⊑ Γ
  _,_ : ∀ {Γ Γ′ A} (ρ : Γ ⊑ Γ′) (i : Γ′ ∋ A) → Γ , A ⊑ Γ′

stop : ∙ ⊑ ∙
stop = ∙

wk⊑ : ∀ {B Γ Γ′} → Γ ⊑ Γ′ → Γ ⊑ Γ′ , B
wk⊑ ∙       = ∙
wk⊑ (ρ , i) = wk⊑ ρ , wk∋ i

lift⊑ : ∀ {B Γ Γ′} → Γ ⊑ Γ′ → Γ , B ⊑ Γ′ , B
lift⊑ ρ = wk⊑ ρ , zero

id⊑ refl⊑ : ∀ {Γ} → Γ ⊑ Γ
id⊑ {∙}    = ∙
id⊑ {Γ , A} = lift⊑ id⊑
refl⊑ = id⊑


----------------------------------------------------------------------------------------------------

ren∋ : ∀ {Γ Γ′ A} → Γ ⊑ Γ′ → Γ ∋ A → Γ′ ∋ A
ren∋ (ρ , j) zero    = j
ren∋ (ρ , j) (wk∋ i) = ren∋ ρ i

eqwkren∋ : ∀ {B Γ Γ′ A} (ρ : Γ ⊑ Γ′) (i : Γ ∋ A) →
           ren∋ (wk⊑ ρ) i ≡ (wk∋ {B = B} ∘ ren∋ ρ) i
eqwkren∋ (ρ , j) zero    = refl
eqwkren∋ (ρ , j) (wk∋ i) = eqwkren∋ ρ i

idren∋ : ∀ {Γ A} (i : Γ ∋ A) → ren∋ id⊑ i ≡ i
idren∋ zero    = refl
idren∋ (wk∋ i) = eqwkren∋ id⊑ i ⋮ wk∋ & idren∋ i

_∘⊑_ : ∀ {Γ Γ′ Γ″} → Γ′ ⊑ Γ″ → Γ ⊑ Γ′ → Γ ⊑ Γ″
ρ′ ∘⊑ ∙       = ∙
ρ′ ∘⊑ (ρ , i) = (ρ′ ∘⊑ ρ) , ren∋ ρ′ i

trans⊑ _○_ : ∀ {Γ Γ′ Γ″} → Γ ⊑ Γ′ → Γ′ ⊑ Γ″ → Γ ⊑ Γ″
trans⊑ = flip _∘⊑_
_○_ = trans⊑

compren∋ : ∀ {Γ Γ′ Γ″ A} (ρ′ : Γ′ ⊑ Γ″) (ρ : Γ ⊑ Γ′) (i : Γ ∋ A) →
           ren∋ (ρ′ ∘⊑ ρ) i ≡ (ren∋ ρ′ ∘ ren∋ ρ) i
compren∋ (ρ′ , j′) (ρ , j) zero    = refl
compren∋ (ρ′ , j′) (ρ , j) (wk∋ i) = compren∋ (ρ′ , j′) ρ i


----------------------------------------------------------------------------------------------------

lid⊑ : ∀ {Γ Γ′} (ρ : Γ ⊑ Γ′) → id⊑ ∘⊑ ρ ≡ ρ
lid⊑ ∙       = refl
lid⊑ (ρ , i) = _,_ & lid⊑ ρ ⊗ idren∋ i

eq⊑ : ∀ {B Γ Γ′ Γ″} (ρ′ : Γ′ ⊑ Γ″) (i′ : Γ″ ∋ B) (ρ : Γ ⊑ Γ′) →
      (ρ′ , i′) ∘⊑ wk⊑ ρ ≡ ρ′ ∘⊑ ρ
eq⊑ ρ′ i′ ∙       = refl
eq⊑ ρ′ i′ (ρ , i) = (_, ren∋ ρ′ i) & eq⊑ ρ′ i′ ρ

eqwk⊑ : ∀ {B Γ Γ′ Γ″} (ρ′ : Γ′ ⊑ Γ″) (ρ : Γ ⊑ Γ′) →
        lift⊑ ρ′ ∘⊑ wk⊑ ρ ≡ wk⊑ {B} (ρ′ ∘⊑ ρ)
eqwk⊑ ρ′ ∙       = refl
eqwk⊑ ρ′ (ρ , i) = _,_ & eqwk⊑ ρ′ ρ ⊗ eqwkren∋ ρ′ i

eqlift⊑ : ∀ {B Γ Γ′ Γ″} (ρ′ : Γ′ ⊑ Γ″) (ρ : Γ ⊑ Γ′) →
          lift⊑ ρ′ ∘⊑ lift⊑ ρ ≡ lift⊑ {B} (ρ′ ∘⊑ ρ)
eqlift⊑ ρ′ ∙       = refl
eqlift⊑ ρ′ (ρ , i) = (_, zero) & eqwk⊑ ρ′ (ρ , i)

rid⊑ : ∀ {Γ Γ′} (ρ : Γ ⊑ Γ′) → ρ ∘⊑ id⊑ ≡ ρ
rid⊑ ∙       = refl
rid⊑ (ρ , i) = (_, i) & (eq⊑ ρ i id⊑ ⋮ rid⊑ ρ)

ass⊑ : ∀ {Γ Γ′ Γ″ Γ‴} (ρ″ : Γ″ ⊑ Γ‴) (ρ′ : Γ′ ⊑ Γ″) (ρ : Γ ⊑ Γ′) →
       ρ″ ∘⊑ (ρ′ ∘⊑ ρ) ≡ (ρ″ ∘⊑ ρ′) ∘⊑ ρ
ass⊑ ρ″ ρ′ ∙       = refl
ass⊑ ρ″ ρ′ (ρ , i) = _,_ & ass⊑ ρ″ ρ′ ρ ⊗ compren∋ ρ″ ρ′ i ⁻¹


----------------------------------------------------------------------------------------------------
